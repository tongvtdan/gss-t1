---- Lazer_ScanUp Matches (14 in 5 files) ----
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):				//Lazer_ScanUp(&T1Robot);
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):			if(T1Robot.lazer_status == LAZER_ENA) Lazer_ScanUp(&T1Robot);	 //start lazer scan function
Stm32f10x_it.c (e:\cty gremsy\gss-01\t1_source_code\project):			Lazer_ScanUp(&T1Robot);
Stm32f10x_it.c (e:\cty gremsy\gss-01\t1_source_code\project):			else 	if(T1Robot.lazer_status == LAZER_SCAN_DOWN) Lazer_ScanUp(&T1Robot);
T1Robot_lib.c (e:\cty gremsy\gss-01\t1_source_code\libraries\t1robot_lib):void Lazer_ScanUp(T1_ROBOT* robot)
T1Robot_lib.h (e:\cty gremsy\gss-01\t1_source_code\libraries\t1robot_lib):void Lazer_ScanUp(T1_ROBOT* robot);
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lazer_ScanUp
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EXTI15_10_IRQHandler &rArr; Lazer_ScanUp
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lazer_ScanUp
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lazer_ScanUp
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lazer_ScanUp
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lazer_ScanUp
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<P><STRONG><a name="[5d]"></a>Lazer_ScanUp</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, t1robot_lib.o(.text))
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lazer_ScanUp
---- Rulo_Stop Matches (9 in 4 files) ----
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):					Rulo_Stop(&T1Robot);
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):				Rulo_Stop(&T1Robot);
T1Robot_lib.c (e:\cty gremsy\gss-01\t1_source_code\libraries\t1robot_lib):void Rulo_Stop(T1_ROBOT* robot)
T1Robot_lib.h (e:\cty gremsy\gss-01\t1_source_code\libraries\t1robot_lib):void Rulo_Stop(T1_ROBOT* robot);
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rulo_Stop
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rulo_Stop
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Rulo_Stop
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<P><STRONG><a name="[5a]"></a>Rulo_Stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, t1robot_lib.o(.text))
T1_Control.htm (e:\cty gremsy\gss-01\t1_source_code\project\rvmdk\obj):<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Rulo_Stop
---- dir Matches (55 in 16 files) ----
CMSIS debug support.htm (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis):  ITM communication channel is only capable for OUT direction. For IN direction
CMSIS_changes.htm (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis):  ITM communication channel is only capable for OUT direction. To allow also communication for
CMSIS_changes.htm (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis):  IN direction a simple concept is provided.
CMSIS_Core.htm (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\documentation):  to an dummy handler. Therefore the interrupt handler can be directly used in application software 
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):uint8_t lazer_dir;
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):					Lazer_Motor_Run(lazer_dir);
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):					lazer_dir = !lazer_dir;
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):					Lazer_Motor_Run(lazer_dir);
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):	/* lazer scan motor's direction control pins PB12, PB13*/		
Main.c (e:\cty gremsy\gss-01\t1_source_code\project):	/* two control direction pin for rulo motor (mode PWM_CH1, PWM_CH2 Timer4) */	
Release_Notes.html (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):<li class="MsoNormal" style=""><span style="font-size: 10pt; font-family: Verdana;"><span style="font-weight: bold; font-style: italic;">"system_stm32f10x.c" </span><span style="font-weight: bold;"></span>moved to to "<span style="font-weight: bold; font-style: italic;">STM32F10x_StdPeriph_Template</span>" directory. This file is also moved to each example directory under "<span style="font-weight: bold; font-style: italic;">STM32F10x_StdPeriph_Examples</span>".</span><br>
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):  *                code will be based on direct access to peripheral’s registers 
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):   be based on direct access to peripherals registers 
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR1_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR2_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR3_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR4_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR5_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR6_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  DMA_CCR7_DIR                        ((uint16_t)0x0010)            /*!< Data transfer direction */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  SDIO_DCTRL_DTDIR                    ((uint16_t)0x0002)            /*!< Data transfer direction selection */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  SPI_CR1_BIDIOE                      ((uint16_t)0x4000)            /*!< Output enable in bidirectional mode */
Stm32f10x.h (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):#define  SPI_CR1_BIDIMODE                    ((uint16_t)0x8000)            /*!< Bidirectional data mode enable */
Stm32f10x_dma.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):                                        This parameter can be a value of @ref DMA_data_transfer_direction */
Stm32f10x_dma.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):                                        or DMA_MemoryDataSize members depending in the transfer direction. */
Stm32f10x_dma.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):/** @defgroup DMA_data_transfer_direction 
Stm32f10x_i2c.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  /* Test on the direction to set/reset the read/write bit */
Stm32f10x_i2c.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):/** @defgroup I2C_transfer_direction 
Stm32f10x_i2c.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):  * (I2C_Send7bitAddress() function, it also determines the direction of the communication: 
Stm32f10x_rcc.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  * @note   HSE can not be stopped if it is used directly or through the PLL as system clock.
Stm32f10x_rcc.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  * @note   HSI can not be stopped if it is used directly or through the PLL as system clock.
Stm32f10x_rcc.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *   - The PLL2 can not be disabled if it is used indirectly as system clock
Stm32f10x_sdio.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):  uint32_t SDIO_TransferDir;    /*!< Specifies the data transfer direction, whether the transfer
Stm32f10x_spi.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  /* Configure SPIx: direction, NSS management, first transmitted bit, BaudRate prescaler
Stm32f10x_spi.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  * @brief  Selects the data transfer direction in bi-directional mode for the specified SPI.
Stm32f10x_spi.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  * @param  SPI_Direction: specifies the data transfer direction in bi-directional mode. 
Stm32f10x_spi.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *     @arg SPI_Direction_Tx: Selects Tx transmission direction
Stm32f10x_spi.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *     @arg SPI_Direction_Rx: Selects Rx receive direction
Stm32f10x_spi.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):  uint16_t SPI_Direction;           /*!< Specifies the SPI unidirectional or bidirectional data mode.
Stm32f10x_spi.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):                                         This parameter can be a value of @ref SPI_data_direction */
Stm32f10x_spi.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):/** @defgroup SPI_data_direction 
Stm32f10x_spi.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):/** @defgroup SPI_direction_transmit_receive 
Stm32f10x_tim.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):    icoppositeselection = TIM_ICSelection_IndirectTI;
Stm32f10x_tim.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  /* Disable slave mode to clock the prescaler directly with the internal clock */
Stm32f10x_tim.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
Stm32f10x_tim.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
Stm32f10x_tim.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
Stm32f10x_tim.c (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\src):  *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
Stm32f10x_tim.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):#define TIM_ICSelection_IndirectTI         ((uint16_t)0x0002) /*!< TIM Input 1, 2, 3 or 4 is selected to be
Stm32f10x_tim.h (e:\cty gremsy\gss-01\t1_source_code\libraries\stm32f10x_stdperiph_driver\inc):                                        ((SELECTION) == TIM_ICSelection_IndirectTI) || \
System_stm32f10x.c (e:\cty gremsy\gss-01\t1_source_code\libraries\cmsis\cm3\devicesupport\st\stm32f10x):  *    When HSE is used as system clock source, directly or through PLL, and you
